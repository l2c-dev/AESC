#!/bin/bash

# Diret√≥rio do script atual
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Diret√≥rio onde o c√≥digo ser√° armazenado
CODIGO_DIR="$SCRIPT_DIR/../../codigos/simmsus"

clear
echo ""
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë      üß™ AESC v1.0 | Ambiente de Execu√ß√£o de Simula√ß√µes Cient√≠ficas           ‚ïë"
echo "‚ïë              üíª Laborat√≥rio Pessoal de Computa√ß√£o Cient√≠fica                 ‚ïë"
echo "‚ïë                Desenvolvido por Prof. Rafael Gabler Gontijo                  ‚ïë"
echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
echo "‚ïë     Ambiente de execu√ß√£o ‚Äì SIMMSUS üß≤ | Compila√ß√£o (IFX ou GFORTRAN)         ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Verifica√ß√µes b√°sicas
if ! command -v git >/dev/null 2>&1; then
  echo "‚ùå Git n√£o encontrado. Instale o Git e tente novamente."
  exit 1
fi
if ! command -v make >/dev/null 2>&1; then
  echo "‚ùå 'make' n√£o encontrado. Instale o 'build-essential' (ou equivalente) e tente novamente."
  exit 1
fi

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Fontes: pull/clone/usar snapshot
if [ -d "$CODIGO_DIR/.git" ]; then
  echo "üîÑ Reposit√≥rio Git detectado em codigos/simmsus (subm√≥dulo). Executando git pull..."
  git -C "$CODIGO_DIR" pull origin main
else
  if [ -d "$CODIGO_DIR" ] && [ "$(ls -A "$CODIGO_DIR" 2>/dev/null)" ]; then
    echo "üì¶ Fontes do SIMMSUS j√° presentes (snapshot). Pulando etapa de Git."
  else
    echo "üì• Clonando o reposit√≥rio do SIMMSUS para codigos/simmsus..."
    mkdir -p "$CODIGO_DIR"
    git clone https://github.com/lcec-unb/simmsus.git "$CODIGO_DIR"
  fi
fi

cd "$CODIGO_DIR" || exit 1

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Escolha do compilador
USE_IFX=false
if command -v ifx >/dev/null 2>&1; then
  USE_IFX=true
else
  echo "‚ö†Ô∏è  IFX (Intel oneAPI) n√£o encontrado no sistema."
  read -r -p "‚ùî Deseja compilar com GFORTRAN? [s/N]: " RESP
  RESP="${RESP,,}"
  if [[ "$RESP" == "s" || "$RESP" == "sim" || "$RESP" == "y" || "$RESP" == "yes" ]]; then
    if ! command -v gfortran >/dev/null 2>&1; then
      echo "‚ùå GFORTRAN n√£o encontrado. Instale-o e tente novamente."
      exit 1
    fi
    USE_IFX=false
  else
    echo "üö´ Opera√ß√£o cancelada (sem compilador dispon√≠vel)."
    exit 1
  fi
fi

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Compila√ß√£o
echo ""
if $USE_IFX; then
  echo "üõ†Ô∏è Compilando com IFX..."
  make ifx  &> log.compilacao.ifx
  COMP_LOG="log.compilacao.ifx"
else
  echo "üõ†Ô∏è Compilando com GFORTRAN..."
  make gfortran  &> log.compilacao.gfortran
  COMP_LOG="log.compilacao.gfortran"
fi

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Verifica√ß√£o do execut√°vel
if [ -f "$CODIGO_DIR/simmsus.ex" ]; then
  echo ""
  echo "‚úÖ Compila√ß√£o finalizada com sucesso!"
  echo "üîß Execut√°vel gerado: simmsus.ex"
  rm -f log.compilacao.ifx log.compilacao.gfortran 2>/dev/null
else
  echo ""
  echo "‚ùå A compila√ß√£o n√£o gerou o execut√°vel esperado (simmsus.ex)."
  echo "‚ÑπÔ∏è  Consulte o log recente: $COMP_LOG"
fi
