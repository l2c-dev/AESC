#!/bin/bash
# Clonar reposit√≥rio p√∫blico do GitHub (HTTPS) para ../codigos/<repo>

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(dirname "$SCRIPT_DIR")"
DEST_PADRAO="$(readlink -f "$ROOT_DIR/../codigos")"

clear
echo ""
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë      üß™ AESC v1.0 | Ambiente de Execu√ß√£o de Simula√ß√µes Cient√≠ficas           ‚ïë"
echo "‚ïë              üíª Laborat√≥rio Pessoal de Computa√ß√£o Cient√≠fica                 ‚ïë"
echo "‚ïë                Desenvolvido por Prof. Rafael Gabler Gontijo                  ‚ïë"
echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
echo "‚ïë                 Git üß∞ | Clonar reposit√≥rio do GitHub (HTTPS)                ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

if ! command -v git >/dev/null 2>&1; then
  echo "‚ùå git n√£o encontrado. Instale-o (ex.: sudo apt install -y git)."
  read -p "Pressione ENTER para voltar..." ; bash "$SCRIPT_DIR/menu_git.sh"; exit 1
fi

read -p "üîó URL HTTPS do reposit√≥rio (ex.: https://github.com/usuario/repo.git): " URL
[[ -z "$URL" ]] && { echo "‚ùå URL vazia."; read -p "ENTER..."; bash "$SCRIPT_DIR/menu_git.sh"; exit 1; }

echo "üìÅ Diret√≥rio de destino padr√£o: $DEST_PADRAO"
read -p "Deseja usar esse destino? [S/n]: " use_padrao
if [[ "$use_padrao" =~ ^[Nn]$ ]]; then
  read -p "Informe o diret√≥rio de destino: " DEST_ESC
  DEST_DIR="${DEST_ESC/#\~/$HOME}"
  DEST_DIR="$(readlink -f "$DEST_DIR")"
else
  DEST_DIR="$DEST_PADRAO"
fi

mkdir -p "$DEST_DIR" || { echo "‚ùå Falha ao criar/acessar $DEST_DIR"; read -p "ENTER..."; bash "$SCRIPT_DIR/menu_git.sh"; exit 1; }

cd "$DEST_DIR" || { echo "‚ùå Falha ao acessar $DEST_DIR"; read -p "ENTER..."; bash "$SCRIPT_DIR/menu_git.sh"; exit 1; }
echo ""
echo "‚¨áÔ∏è  Clonando em: $DEST_DIR"
if ! git clone "$URL"; then
  echo "‚ùå Falha ao clonar."
  read -p "Pressione ENTER para voltar..." ; bash "$SCRIPT_DIR/menu_git.sh"; exit 1
fi

REPO_NOME="$(basename -s .git "$URL")"
echo ""
echo "‚úÖ Reposit√≥rio clonado com sucesso!"
echo "üìÅ Pasta: $DEST_DIR/$REPO_NOME"

read -p "Pressione ENTER para retornar ao menu Git..."
bash "$SCRIPT_DIR/menu_git.sh"; exit 0
